// Lists  (l-list)
//
// Experimental: Resets list styles.
//
// .l-list--has-arrow - Adds SVG arrow as bullet. Turns yellow on hover.
//
// Markup: <ul class="l-list {{ className }}"><li>Example</li><li>Example</li></ul>
// 
//
// Styleguide 7.0.3
.l-list {
  list-style: none;

  &--has-arrow {
    li {
      padding-left: $size-b;
      position: relative;

      @include mq($until: bp-s) {
        padding: $size-b/4 $size-b;
      }

      &:before {
        background-image: url('data:image/svg+xml;utf8,<svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 9 28"><path fill="rgb(208,208,208)" d="M9 14c0 0.266-0.109 0.516-0.297 0.703l-7 7c-0.187 0.187-0.438 0.297-0.703 0.297-0.547 0-1-0.453-1-1v-14c0-0.547 0.453-1 1-1 0.266 0 0.516 0.109 0.703 0.297l7 7c0.187 0.187 0.297 0.438 0.297 0.703z"></path></svg>');
        background-position: center center;
        background-repeat: no-repeat;
        background-size: $size-xs $size-xs;
        content: '';
        height: $size-xs;
        left: 0;
        margin-top: 3px;
        position: absolute;
        width: $size-xs;
      }

      &:hover {
        &:before {
          background-image: url('data:image/svg+xml;utf8,<svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 9 28"><path fill="rgb(255,194,0)" d="M9 14c0 0.266-0.109 0.516-0.297 0.703l-7 7c-0.187 0.187-0.438 0.297-0.703 0.297-0.547 0-1-0.453-1-1v-14c0-0.547 0.453-1 1-1 0.266 0 0.516 0.109 0.703 0.297l7 7c0.187 0.187 0.297 0.438 0.297 0.703z"></path></svg>');
        }
      }
    }
  }
}


// Display  (l-display)
//
// Experimental: Display helpers
//
// .l-display-ib - Inline Block
// .l-display-block - Block
// .l-display-inline - Inline
// .l-clearfix - Clears floats
// .l-display-fade-in - Clears floats
//
// Markup: <span class="{{ className }} has-bg-gray-light"><span class="l-float-left">Example</span></span>
// 
//
// Styleguide 7.0.4
.l-display-ib {
  display: inline-block;
}

.l-display-block {
  display: block;
}

.l-display-inline {
  display: inline;
}

.l-clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

.l-display-fade-in {
  opacity: 1;
  transition: opacity .3s;
}


// Float  (l-float)
//
// Experimental: Opinionated floating
//
// .l-float--left - Float left
// .l-float--right  - Float right
//
// Markup: <span class="l-display-block l-clearfix has-bg-gray-light"><span class="l-float {{ className }}">Example</span></span>
// 
//
// Styleguide 7.0.4
.l-float {
  width: 50%;

  @include mq($until: bp-s) {
    width: 100%;
  }

  &--left {
    float: left;
    margin: 0 $size-s $size-s 0;
  }

  &--right {
    float: right;
    margin: 0 0 $size-s $size-s;
  }
}

// Align (l-align)
//
// Experimental: Mostly used for centering and some assume a flex parent.
//
// l-align-center-x - Margin auto FTW
// l-align-center-y - The ol' vertical transform trick
// l-align-center-self - Used to center itself in a flex parent
// l-algin-justify - Centers children assuming a display flex is present
// l-algin-bottom - Aligns children to the end of an element display flex is present
//
// Markup: 7-utilities/alignment-demo.html
// 
//
// Styleguide 7.0.4
.l-align-center-x {
  margin-left: auto;
  margin-right: auto;
}

.l-align-center-y {
  left: 0;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 100%;
  z-index: 1;
}

// apply to an item with a flex parent
.l-align-center-self {
  align-self: center;
}

.l-align-justify {
  justify-content: center;
}

.l-align-bottom {
  justify-content: end;
}


// Hidden (l-hidden)
//
// Experimental: Hides elements for specified experiences.
//
// .l-hidden-sr  - Hidden from screen readers
// .l-hidden-print  - Hidden from printed output
//
// Markup: <span style="height: 50px; width: 50px; position: relative" class="has-bg-gray-light"><span class="{{ className }}">Example</span></span>
// 
//
// Styleguide 7.0.4
.hidden,
.l-hidden {
  display: none !important;
}

.l-hidden-sr {
  position: absolute;
  left: -10000px;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

.l-hidden-print {
  @media print {
    display: none !important;
  }
}

// Full width (l-width)
//
// Experimental: Stretches element to 100% or at most 100% of its natural width
//
// .l-width-full - Width is 100% of parent
// .l-width-max - Max width is 100% of parent
//
// Markup: <div style="width: 300px;" class="has-bg-gray-light"><img class="{{ className }}" src="https://picsum.photos/250?random"/></div>
// 
//
// Styleguide 7.0.5
.l-width-full {
  width: 100%;
}

.l-width-max {
  max-width: 50%;
}
